/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package nypproje;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author emre
 */
public class ScorePanel extends javax.swing.JFrame {

    /**
     * Creates new form ScorePanel
     */
    private List<int[]> exerciseList;
    private List<String[]> reportList;
    private List<String[]> siralamaList;
    public ScorePanel() {
        initComponents();
        // Alıştırma listesini oluştur
        exerciseList = new ArrayList<>();
        reportList = new ArrayList<>();
        // Kayıtlı alıştırmaları yükle
        //loadExercisesFromTxt();
        loadExercisesFromSer();
        loadReportsFromSer();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        alistirmaTablosu = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        siralamaTablosu = new javax.swing.JTable();
        mainPageButton = new javax.swing.JButton();
        siralamaButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        alistirmaTablosu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Alıştırma Kodu", "a", "b", "Soru Sayisi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        alistirmaTablosu.setToolTipText("");
        alistirmaTablosu.setShowGrid(true);
        jScrollPane1.setViewportView(alistirmaTablosu);

        siralamaTablosu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Çocuk Adı", "Puan", "Süre"
            }
        ));
        siralamaTablosu.setShowGrid(true);
        jScrollPane2.setViewportView(siralamaTablosu);

        mainPageButton.setText("KAPAT");
        mainPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainPageButtonActionPerformed(evt);
            }
        });

        siralamaButton.setText("Sıralama Göster");
        siralamaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siralamaButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(siralamaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mainPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(siralamaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mainPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void siralamaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siralamaButtonActionPerformed
        // TODO add your handling code here:
        siralamaList = new ArrayList<>();
        DefaultTableModel model = (DefaultTableModel)siralamaTablosu.getModel();
        model.setRowCount(0);
        int alistirmaKodu = alistirmaTablosu.getSelectedRow();
        for(String[] report: reportList){
            if(Double.parseDouble(report[2])==alistirmaKodu){
                int last = report.length - 1;
                Object[] eklenecek = {report[1],report[last-1],report[last]};
                model.addRow(eklenecek);
            }
        }
        
        
        // Satırları ekleme işleminden sonra sıralama yapmak için TableRowSorter kullanın
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        siralamaTablosu.setRowSorter(sorter);

        // Sıralama yapılacak sütunun indeksini belirleyin (örneğin "Puan" sütunu)
        int columnIndex = 1; // "Puan" sütununun indeksi (0'dan başlayarak sayılır)

        // Sıralama işlemini yapılandırın
        sorter.setSortKeys(List.of(new RowSorter.SortKey(columnIndex, SortOrder.DESCENDING))); // Azalan şekilde sıralama

        // Tabloya satırları ekledikten sonra sıralama otomatik olarak yapılacak
    }//GEN-LAST:event_siralamaButtonActionPerformed

    private void mainPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainPageButtonActionPerformed
        // TODO add your handling code here:
        MainAdminPanel mainAdminPanel = new MainAdminPanel();
        mainAdminPanel.setVisible(true);
        dispose();
    }//GEN-LAST:event_mainPageButtonActionPerformed
    
    private void loadReportsFromSer(){
        try {
            FileInputStream fileIn = new FileInputStream("reports.ser");
            ObjectInputStream objectIn = new ObjectInputStream(fileIn);

            // reports.ser dosyasından verileri oku ve reportList'e at
            reportList = (List<String[]>) objectIn.readObject();

            objectIn.close();
            fileIn.close();
        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
            // Hata durumunda gerekli işlemleri yapabilirsiniz
        }
    }
    
    private void updateTable(){
        DefaultTableModel model = (DefaultTableModel)alistirmaTablosu.getModel();
        model.setRowCount(0);
        int index = 1;
        for (int[] exercise : exerciseList) {
            Object[] eklenecek = {index,exercise[0],exercise[1],exercise[2]};
            model.addRow(eklenecek);
            index++;
        }
    }
    
    private void loadExercisesFromSer() {
        try {
            File file = new File("exercises.ser");
        
            // Ser dosyası mevcut değilse boş bir dosya oluştur
            if (!file.exists()) {
                file.createNewFile();
                exerciseList = new ArrayList<>();
                updateTable();
                return;
            }
 
            // Serileştirilmiş alıştırmaları okumak için FileInputStream ve ObjectInputStream kullanılır
            FileInputStream fileIn = new FileInputStream("exercises.ser");
            ObjectInputStream objectIn = new ObjectInputStream(fileIn);

            // Serileştirilmiş alıştırmaları oku
            exerciseList = (List<int[]>) objectIn.readObject();

            // Kaynakları serbest bırak
            objectIn.close();
            fileIn.close();

            // Alıştırmaları güncelle
            updateTable();
        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ScorePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ScorePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ScorePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ScorePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ScorePanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable alistirmaTablosu;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton mainPageButton;
    private javax.swing.JButton siralamaButton;
    private javax.swing.JTable siralamaTablosu;
    // End of variables declaration//GEN-END:variables
}
